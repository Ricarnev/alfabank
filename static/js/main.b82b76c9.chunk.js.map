{"version":3,"sources":["store/actions/actionTypes.js","store/actions/actions.js","assets/remove.svg","assets/like.svg","assets/unlike.svg","components/card/index.jsx","assets/github.svg","App.js","store/reducers/card.js","store/store.js","index.js"],"names":["REMOVE_CARD","LIKE","SET_CARDS","ONLY_LIKED","likeCard","id","type","payload","removeCard","setCards","value","showOnlyLiked","Card","img","text","like","remove","onLike","className","onClick","src","removeIcon","alt","likeIcon","unlikeIcon","connect","state","characters","likedCharacters","initialized","dispatch","set_cards","bindActionCreators","remove_card","like_card","show_only_liked","props","useEffect","axios","get","then","result","data","results","e","console","log","href","githubIcon","length","map","item","image","name","reducer","action","filter","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b82b76c9.chunk.js","sourcesContent":["export const REMOVE_CARD = 'REMOVE_CARD';\r\nexport const LIKE = 'LIKE';\r\nexport const SET_CARDS = 'SET_CARDS';\r\nexport const ONLY_LIKED = 'ONLY_LIKED';","import { LIKE, ONLY_LIKED, REMOVE_CARD, SET_CARDS } from \"./actionTypes\";\r\n\r\nexport function likeCard(id) {\r\n  return {\r\n    type: LIKE,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function removeCard(id) {\r\n  return {\r\n    type: REMOVE_CARD,\r\n    payload: id,\r\n  };\r\n}\r\n\r\nexport function setCards(value) {\r\n  return {\r\n    type: SET_CARDS,\r\n    payload: value,\r\n  };\r\n}\r\n\r\nexport function showOnlyLiked() {\r\n  return {\r\n    type: ONLY_LIKED,\r\n  };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/remove.562b6f7b.svg\";","export default __webpack_public_path__ + \"static/media/like.6e367571.svg\";","export default __webpack_public_path__ + \"static/media/unlike.810c2b26.svg\";","import \"./card.css\";\r\nimport removeIcon from \"../../assets/remove.svg\";\r\nimport likeIcon from \"../../assets/like.svg\";\r\nimport unlikeIcon from \"../../assets/unlike.svg\";\r\n\r\nexport default function Card({ img, text, like, remove, onLike }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <button className=\"card-remove-btn\" onClick={remove}>\r\n        <img\r\n          className=\"card-remove-btn-icon\"\r\n          src={removeIcon}\r\n          alt=\"Кнопка удаления\"\r\n        />\r\n      </button>\r\n      <img className=\"card-img\" src={img} alt={text} />\r\n      <div className=\"card-bottom\">\r\n        <span>{text}</span>\r\n        <button className=\"card-like-btn\" onClick={onLike}>\r\n          {like ? (\r\n            <img\r\n              className=\"card-like-btn-icon\"\r\n              src={likeIcon}\r\n              alt=\"Кнопка поставить лайк\"\r\n            />\r\n          ) : (\r\n            <img\r\n              className=\"card-like-btn-icon\"\r\n              src={unlikeIcon}\r\n              alt=\"Кнопка убрать лайк\"\r\n            />\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  likeCard,\n  removeCard,\n  setCards,\n  showOnlyLiked,\n} from \"./store/actions/actions\";\nimport Card from \"./components/card\";\nimport likeIcon from \"./assets/like.svg\";\nimport githubIcon from \"./assets/github.svg\";\n\nfunction App(props) {\n  useEffect(() => {\n    try {\n      axios\n        .get(\"https://rickandmortyapi.com/api/character\")\n        .then((result) => props.set_cards(result.data.results));\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>Тестовое задание для Альфа-Банк</h1>\n        <a className='github-link' href='https://github.com/Ricarnev/alfabank'>\n          Link on\n          <img className='github-icon' src={githubIcon}/>\n        </a>\n      </header>\n      <div className=\"cards-list-container\">\n        {props.showOnlyLiked ? (\n          <button className=\"only-liked-button\" onClick={props.show_only_liked}>\n            Показать все\n          </button>\n        ) : (\n          <button className=\"only-liked-button\" onClick={props.show_only_liked}>\n            Показать только\n            <img\n              className=\"only-liked-icon\"\n              src={likeIcon}\n              alt=\"Изображение лайка\"\n            />\n          </button>\n        )}\n        <div className=\"cards-list\">\n          {props.initialized === false ? (\n            <p>Получение данных...</p>\n          ) : props.showOnlyLiked ? (\n            props.likedCharacters.length > 0 ? (\n              props.likedCharacters.map((item) => (\n                <Card\n                  img={item.image}\n                  text={item.name}\n                  like={item.like ? true : false}\n                  remove={() => props.remove_card(item.id)}\n                  onLike={() => props.like_card(item.id)}\n                />\n              ))\n            ) : (\n              <p>\n                Похоже, вы еще не лайкнули ни одну карточку. Нажмите кнопку\n                \"Показать все\" и лайкните любую для отображения здесь.\n              </p>\n            )\n          ) : props.characters.length > 0 ? (\n            props.characters.map((item) => (\n              <Card\n                img={item.image}\n                text={item.name}\n                like={item.like ? true : false}\n                remove={() => props.remove_card(item.id)}\n                onLike={() => props.like_card(item.id)}\n              />\n            ))\n          ) : (\n            <p>\n              У вас не осталось ни одной карточки, либо произошла ошибка.\n              Попробуйте перезагрзуить страницу или обратитесь к разработчику.\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    characters: state.characters,\n    likedCharacters: state.likedCharacters,\n    showOnlyLiked: state.showOnlyLiked,\n    initialized: state.initialized\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    set_cards: bindActionCreators(setCards, dispatch),\n    remove_card: bindActionCreators(removeCard, dispatch),\n    like_card: bindActionCreators(likeCard, dispatch),\n    show_only_liked: bindActionCreators(showOnlyLiked, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n  LIKE,\r\n  ONLY_LIKED,\r\n  REMOVE_CARD,\r\n  SET_CARDS,\r\n} from \"../actions/actionTypes\";\r\n\r\nfunction reducer(\r\n  state = {\r\n    characters: [],\r\n    likedCharacters: [],\r\n    showOnlyLiked: false,\r\n    initialized: false,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REMOVE_CARD:\r\n      return {\r\n        ...state,\r\n        characters: state.characters.filter(\r\n          (item) => item.id !== action.payload\r\n        ),\r\n        likedCharacters: state.likedCharacters.filter(\r\n          (item) => item.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case LIKE:\r\n      return {\r\n        ...state,\r\n        characters: state.characters.map((item) => {\r\n          if (item.id === action.payload) {\r\n            return { ...item, like: !item.like };\r\n          }\r\n          return item;\r\n        }),\r\n        likedCharacters: state.likedCharacters.filter(\r\n          (item) => item.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case SET_CARDS:\r\n      return { ...state, characters: action.payload, initialized: true };\r\n\r\n    case ONLY_LIKED:\r\n      return {\r\n        ...state,\r\n        likedCharacters: state.characters.filter((item) => item.like === true),\r\n        showOnlyLiked: !state.showOnlyLiked,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers/card\";\r\n\r\nexport const store = createStore(reducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport {store} from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}